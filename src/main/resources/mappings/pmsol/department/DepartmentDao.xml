<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.pmsol.department.dao.DepartmentDao">

	<!-- 自定义resultMap,主要用于复杂关联查询 -->
	<resultMap id="departmentMap" type="Department">
		<id property="id" column="id"/>
		<result property="flag" column="flag"/>
		<result property="status" column="status"/>
		<association property="office" column="{id=office.id}"
					 javaType="com.jeeplus.modules.sys.entity.Office"
					 select="com.jeeplus.modules.sys.dao.OfficeDao.get">
		</association>
		<association property="hotel" column="{id=hotel.id}"
					 javaType="com.jeeplus.pmsol.hotel.entity.Hotel"
					 select="com.jeeplus.pmsol.hotel.dao.HotelDao.get">
		</association>
	</resultMap>

	<sql id="departmentColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.flag AS "flag",
		a.hotel_id AS "hotel.id",
		a.status AS "status",
		a.office_id AS "office.id"
	</sql>

	<sql id="departmentJoins">
	</sql>


	<select id="get" resultMap="departmentMap" >
		SELECT
			<include refid="departmentColumns"/>
		FROM department a
		<include refid="departmentJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultMap="departmentMap" >
		SELECT
			<include refid="departmentColumns"/>
		FROM department a
		<include refid="departmentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="flag != null and flag != ''">
				AND a.flag = #{flag}
			</if>
			<if test="hotel != null and hotel.id != ''">
				AND a.hotel_id = #{hotel.id}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultMap="departmentMap" >
		SELECT
			<include refid="departmentColumns"/>
		FROM department a
		<include refid="departmentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO department(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			flag,
			hotel_id,
			status,
			office_id
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{flag},
			#{hotel.id},
			#{status},
			#{office.id}
		)
	</insert>

	<update id="update">
		UPDATE department SET
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			flag = #{flag},
			hotel_id = #{hotel.id},
			status = #{status},
			office_id = #{office.id}
		WHERE id = #{id}
	</update>


	<!--物理删除-->
	<update id="delete">
		DELETE FROM department
		WHERE id = #{id}
	</update>

	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE department SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultMap="departmentMap" statementType="STATEMENT">
		select * FROM department  where ${propertyName} = '${value}'
	</select>
	
</mapper>