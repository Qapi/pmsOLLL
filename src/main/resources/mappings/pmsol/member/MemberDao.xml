<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.pmsol.member.dao.MemberDao">

	<!-- 自定义resultMap,主要用于复杂关联查询 -->
	<resultMap id="memberMap" type="Member">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="nickName" column="nick_name"/>
		<result property="idNum" column="id_num"/>
		<result property="birthday" column="birthday"/>
		<result property="gender" column="gender"/>
		<result property="homeAddress" column="home_address"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="emergencyContact" column="emergency_contact"/>
		<result property="emergencyContactPhone" column="emergency_contact_phone"/>
		<result property="memberNum" column="member_num"/>
		<result property="integral" column="integral"/>
		<result property="validityTerm" column="validity_term"/>
		<result property="status" column="status"/>
		<association property="memberLevel" column="{id=memberLevel.id}"
					 javaType="com.jeeplus.pmsol.memberlevel.entity.MemberLevel"
					 select="com.jeeplus.pmsol.memberlevel.dao.MemberLevelDao.get">
		</association>
		<association property="operator" column="{id=operator.id}"
					 javaType="com.jeeplus.modules.sys.entity.User"
					 select="com.jeeplus.modules.sys.dao.UserDao.get">
		</association>
		<association property="hotel" column="{id=hotel.id}"
					 javaType="com.jeeplus.pmsol.hotel.entity.Hotel"
					 select="com.jeeplus.pmsol.hotel.dao.HotelDao.get">
		</association>
	</resultMap>

	<sql id="memberColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.name AS "name",
		a.nick_name AS "nickName",
		a.hotel_id AS "hotel.id",
		a.id_num AS "idNum",
		a.birthday AS "birthday",
		a.home_address AS "homeAddress",
		a.gender AS "gender",
		a.phone AS "phone",
		a.email AS "email",
		a.emergency_contact AS "emergencyContact",
		a.emergency_contact_phone AS "emergencyContactPhone",
		a.member_num AS "memberNum",
		a.menber_level_id AS "memberLevel.id",
		a.operator_id AS "operator.id",
		a.integral AS "integral",
		a.user_id AS "userId",
		a.validity_term AS "validityTerm",
		a.status AS "status"
	</sql>
	
	<sql id="memberJoins">
	</sql>
	
    
	<select id="get" resultMap="memberMap" >
		SELECT 
			<include refid="memberColumns"/>
		FROM member a
		<include refid="memberJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultMap="memberMap" >
		SELECT 
			<include refid="memberColumns"/>
		FROM member a
		<include refid="memberJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="hotel != null and hotel.id != ''">
				AND a.hotel_id = #{hotel.id}
			</if>
			<if test="idNum != null and idNum != ''">
				AND a.id_num LIKE
				<if test="dbName == 'oracle'">'%'||#{idNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{idNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{idNum},'%')</if>
			</if>
			<if test="birthday != null and birthday != ''">
				AND a.birthday = #{birthday}
			</if>
			<if test="phone != null and phone != ''">
				AND a.phone LIKE 
					<if test="dbName == 'oracle'">'%'||#{phone}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{phone}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{phone},'%')</if>
			</if>
			<if test="emergencyContact != null and emergencyContact != ''">
				AND a.emergency_contact LIKE 
					<if test="dbName == 'oracle'">'%'||#{emergencyContact}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{emergencyContact}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{emergencyContact},'%')</if>
			</if>
			<if test="emergencyContactPhone != null and emergencyContactPhone != ''">
				AND a.emergency_contact_phone LIKE 
					<if test="dbName == 'oracle'">'%'||#{emergencyContactPhone}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{emergencyContactPhone}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{emergencyContactPhone},'%')</if>
			</if>
			<if test="memberNum != null and memberNum != ''">
				AND a.member_num LIKE
				<if test="dbName == 'oracle'">'%'||#{memberNum}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{memberNum}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{memberNum},'%')</if>
			</if>
			<if test="memberLevel != null and memberLevel.id != ''">
				AND a.menber_level_id = #{memberLevel.id}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultMap="memberMap" >
		SELECT 
			<include refid="memberColumns"/>
		FROM member a
		<include refid="memberJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO member(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			name,
			nick_name,
			hotel_id,
			id_num,
			birthday,
			gender,
			home_address,
			email,
			phone,
			emergency_contact,
			emergency_contact_phone,
			member_num,
			menber_level_id,
			operator_id,
			integral,
			user_id,
			validity_term,
			status
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{name},
			#{nickName},
			#{hotel.id},
			#{idNum},
			#{birthday},
			#{gender},
			#{homeAddress},
			#{email},
			#{phone},
			#{emergencyContact},
			#{emergencyContactPhone},
			#{memberNum},
			#{memberLevel.id},
			#{operator.id},
			#{integral},
			#{userId},
			#{validityTerm},
			#{status}
		)
	</insert>
	
	<update id="update">
		UPDATE member SET
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			name = #{name},
			nick_name = #{nickName},
			hotel_id = #{hotel.id},
			id_num = #{idNum},
			birthday = #{birthday},
			email = #{email},
			gender = #{gender},
			home_address = #{homeAddress},
			phone = #{phone},
			emergency_contact = #{emergencyContact},
			emergency_contact_phone = #{emergencyContactPhone},
			member_num = #{memberNum},
			menber_level_id = #{memberLevel.id},
			operator_id = #{operator.id},
			integral = #{integral},
			user_id = #{userId},
			validity_term = #{validityTerm},
			status = #{status}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM member
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE member SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultMap="memberMap" statementType="STATEMENT">
		select * FROM member  where ${propertyName} = '${value}'
	</select>
	
</mapper>